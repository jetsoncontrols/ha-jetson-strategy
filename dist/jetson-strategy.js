(()=>{var e,t,i={7:(e,t,i)=>{"use strict";function n(e){return e.replace(/^([a-z])|([-_][a-z])/g,e=>e.toUpperCase().replace(/[-_]/g,""))}function s(e){if("function"==typeof structuredClone)try{return structuredClone(e)}catch{}try{return JSON.parse(JSON.stringify(e))}catch{return e}}i.d(t,{G:()=>s,p:()=>n})},31:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>l});var n=i(241),s=i(964),a=i(987),r=i(122),o=i(737);class c extends r.default{constructor(e){super(),this.baseConfiguration={...this.baseConfiguration,...c.getDefaultConfig(),...e}}static getDefaultConfig(){return{title:(0,a.k)("generic.home"),icon:"mdi:home",path:"home",subview:!1}}async createCardConfigurations(){const e=[];let t,i,r;try{[t,i,r]=await Promise.all([this.createPersonsSection(),this.createAreasSection(),this.createLightsOnSection()])}catch(t){return(0,s.OG)(s.nR,"Error importing created sections!",t),e}return t&&e.push(t),n.O.strategyOptions.home_view.hidden.includes("greeting")||e.push({type:"custom:mushroom-template-card",primary:`{% set time = now().hour %}\n           {% if (time >= 18) %}\n             ${(0,a.k)("generic.good_evening")},{{user}}!\n           {% elif (time >= 12) %}\n             ${(0,a.k)("generic.good_afternoon")}, {{user}}!\n           {% elif (time >= 6) %}\n             ${(0,a.k)("generic.good_morning")}, {{user}}!\n           {% else %}\n             ${(0,a.k)("generic.hello")}, {{user}}! {% endif %}`,icon:"mdi:hand-wave",icon_color:"orange",tap_action:{action:"none"},double_tap_action:{action:"none"},hold_action:{action:"none"}}),n.O.strategyOptions.quick_access_cards&&e.push(...n.O.strategyOptions.quick_access_cards),i&&e.push(i),r&&e.push(r),n.O.strategyOptions.extra_cards&&e.push(...n.O.strategyOptions.extra_cards),[{type:"vertical-stack",cards:e}]}async createPersonsSection(){if(n.O.strategyOptions.home_view.hidden.includes("persons"))return;const e=[],t=(await Promise.resolve().then(i.bind(i,845))).default;return e.push(...n.O.entities.filter(e=>e.entity_id.startsWith("person.")).map(e=>new t(e).getCard())),{type:"vertical-stack",cards:(0,o.P)(e,n.O.strategyOptions.home_view.stack_count.persons??n.O.strategyOptions.home_view.stack_count._)}}async createAreasSection(){if(n.O.strategyOptions.home_view.hidden.includes("areas"))return;const e=[];for(const t of n.O.areas){const a=n.O.strategyOptions.areas[t.area_id]?.type??n.O.strategyOptions.areas._?.type??"default";let r;try{r=(await i(560)(`./${a}`)).default}catch(e){r=(await Promise.resolve().then(i.bind(i,301))).default,n.O.strategyOptions.debug&&"default"!==a&&(0,s.OG)(s.nR,`Error importing ${a}: card!`,e)}e.push(new r(t,{...n.O.strategyOptions.areas._,...n.O.strategyOptions.areas[t.area_id]}).getCard())}return{type:"vertical-stack",title:n.O.strategyOptions.home_view.hidden.includes("areasTitle")?void 0:(0,a.k)("generic.areas"),cards:(0,o.P)(e,n.O.strategyOptions.home_view.stack_count._,{"custom:mushroom-template-card":n.O.strategyOptions.home_view.stack_count.areas?.[0],area:n.O.strategyOptions.home_view.stack_count.areas?.[1]})}}async createLightsOnSection(){if(n.O.strategyOptions.home_view.hidden.includes("lightsOn"))return;const e=[],t=(await Promise.resolve().then(i.bind(i,179))).default;return e.push(...n.O.entities.filter(e=>e.entity_id.startsWith("light.")).map(e=>new t(e).getCard())),{type:"vertical-stack",cards:(0,o.P)(e,n.O.strategyOptions.home_view.stack_count.lightsOn??n.O.strategyOptions.home_view.stack_count._)}}}c.domain="home";const l=c},33:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>a});var n=i(818);class s extends n.default{static getDefaultConfig(){return{type:"custom:mushroom-cover-card",icon:void 0,show_buttons_control:!0,show_position_control:!0,show_tilt_position_control:!0}}constructor(e,t){super(e),this.configuration={...this.configuration,...s.getDefaultConfig(),...t}}}const a=s},122:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>l});var n=i(137),s=i(241),a=i(7),r=i(964),o=i(682),c=i(737);const l=class{get domain(){return this.constructor.domain}constructor(){this.baseConfiguration={icon:"mdi:view-dashboard",subview:!1},this.viewHeaderCardConfiguration={cards:[],type:""},s.O.initialized||(0,r.OG)(r.ZY,"Registry is not initialized!")}async createCardConfigurations(){const e=[],t=(0,a.p)(this.domain+"Card"),r=(await i(560)(`./${t}`)).default,l=new o.A(s.O.entities).whereDomain(this.domain).where(e=>!e.entity_id.endsWith("_stateful_scene")).toList();for(const t of s.O.areas){let i=[],a={area_id:[t.area_id]};const d=new o.A(l).whereAreaId(t.area_id).toList();if("undisclosed"===t.area_id&&(a={entity_id:d.map(e=>e.entity_id)}),i.push(...d.map(e=>new r(e,s.O.strategyOptions.card_options?.[e.entity_id]).getCard())),i.length){i=(0,c.P)(i,s.O.strategyOptions.domains[this.domain].stack_count??s.O.strategyOptions.domains._.stack_count);const r="headerCardConfiguration"in this.baseConfiguration?this.baseConfiguration.headerCardConfiguration:{};i.unshift(new n.default(a,{title:t.name,...r}).createCard()),e.push({type:"vertical-stack",cards:i})}}return this.viewHeaderCardConfiguration.cards.length&&e.length&&e.unshift(this.viewHeaderCardConfiguration),e}async getView(){return{...this.baseConfiguration,cards:await this.createCardConfigurations()}}getDomainTargets(){return{entity_id:s.O.entities.filter(e=>e.entity_id.startsWith(this.domain+".")).map(e=>e.entity_id)}}initializeViewConfig(e,t={},i){this.baseConfiguration={...this.baseConfiguration,...e,...t},this.baseConfiguration.headerCardConfiguration={...this.baseConfiguration.headerCardConfiguration,showControls:s.O.strategyOptions.domains[this.domain]?.showControls??s.O.strategyOptions.domains._.showControls},this.viewHeaderCardConfiguration=new n.default(this.getDomainTargets(),{...this.baseConfiguration.headerCardConfiguration,...i}).createCard()}}},137:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>s});class n{static getDefaultConfig(){return{type:"custom:mushroom-title-card",iconOn:"mdi:power-on",iconOff:"mdi:power-off",onService:"none",offService:"none"}}constructor(e,t){this.target=e,this.configuration={...n.getDefaultConfig(),...t}}createCard(){const e=[{type:"custom:mushroom-title-card",title:this.configuration.title,subtitle:this.configuration.subtitle}];return this.configuration.showControls&&e.push({type:"horizontal-stack",cards:[{type:"custom:mushroom-template-card",icon:this.configuration.iconOff,layout:"vertical",icon_color:"red",tap_action:{action:"call-service",service:this.configuration.offService,target:this.target,data:{}}},{type:"custom:mushroom-template-card",icon:this.configuration.iconOn,layout:"vertical",icon_color:"amber",tap_action:{action:"call-service",service:this.configuration.onService,target:this.target,data:{}}}]}),{type:"horizontal-stack",cards:e}}}const s=n},179:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>a});var n=i(818);class s extends n.default{static getDefaultConfig(){return{type:"tile",icon:void 0,tap_action:{action:"toggle"}}}constructor(e,t){super(e),this.configuration={...this.configuration,...s.getDefaultConfig(),...t}}}const a=s},204:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>r});var n=i(987),s=i(122);class a extends s.default{static getDefaultConfig(){return{title:(0,n.k)("scene.scenes"),path:"scenes",icon:"mdi:palette",subview:!1,headerCardConfiguration:{showControls:!1}}}static getViewHeaderCardConfig(){return{}}constructor(e){super(),this.initializeViewConfig(a.getDefaultConfig(),e,a.getViewHeaderCardConfig())}}a.domain="scene";const r=a},241:(e,t,i)=>{"use strict";i.d(t,{O:()=>l});var n=i(744),s=i.n(n),a=i(700),r=i(964),o=i(987),c=i(682);class l{constructor(){}static get devices(){return l._devices}static get hassStates(){return l._hassStates}static get initialized(){return l._initialized}static get entities(){return l._entities}static get areas(){return l._areas}static get strategyOptions(){return l._strategyOptions}static async initialize(e){(0,o.A)(e.hass),l._hassStates=e.hass.states;const{ConfigurationDefaults:t}=await Promise.resolve().then(i.bind(i,688));try{l._strategyOptions=s()(t,e.config?.strategy?.options??{})}catch(e){(0,r.OG)(r.ZY,"Error importing strategy options!",e)}(0,r.Ux)(l.strategyOptions.debug?r.ZY:r.QC);try{[l._entities,l._devices,l._areas]=await Promise.all([e.hass.callWS({type:"config/entity_registry/list"}),e.hass.callWS({type:"config/device_registry/list"}),e.hass.callWS({type:"config/area_registry/list"})])}catch(e){(0,r.OG)(r.ZY,"Error importing Home Assistant registries!",e)}l._strategyOptions.extra_views.map(e=>({...e,subview:!1})),l._entities=new c.A(l.entities).not().whereEntityCategory("config").not().whereEntityCategory("diagnostic").isNotHidden().whereDisabledBy(null).orderBy(["name","original_name"],"asc").toList(),l._entities=l.entities.map(e=>({...e,area_id:e.area_id??"undisclosed"})),l._devices=new c.A(l.devices).isNotHidden().whereDisabledBy(null).orderBy(["name_by_user","name"],"asc").toList(),l._devices=l.devices.map(e=>({...e,area_id:e.area_id??"undisclosed"})),l.strategyOptions.areas._.hidden?l._areas=[]:(l.strategyOptions.areas.undisclosed?.hidden||l.areas.push(t.areas.undisclosed),l._areas=l.areas.map(e=>({...e,...l.strategyOptions.areas._,...l.strategyOptions.areas?.[e.area_id]})),l.strategyOptions.areas.undisclosed.area_id="undisclosed",l.strategyOptions.areas.undisclosed.type="default",l._areas=new c.A(l.areas).isNotHidden().orderBy(["order","name"],"asc").toList()),(()=>{const e=Object.entries(l.strategyOptions.views);l.strategyOptions.views=Object.fromEntries(e.sort(([e,t],[i,n])=>(t.order??1/0)-(n.order??1/0)||(t.title??"").localeCompare(n.title??"")))})(),(()=>{const e=Object.entries(l.strategyOptions.domains);l.strategyOptions.domains=Object.fromEntries(e.sort(([,e],[,t])=>(0,a.vv)(e)&&(0,a.vv)(t)?(e.order??1/0)-(t.order??1/0)||(e.title??"").localeCompare(t.title??""):0))})(),l._initialized=!0}static getCountTemplate(e,t,i){const n=[];return l.initialized?(n.push(...new c.A(l.entities).whereDomain(e).where(e=>!e.entity_id.endsWith("_stateful_scene")&&"group"!==e.platform).toList().map(e=>`states['${e.entity_id}']`)),`{% set entities = [${n}] %}\n       {{ entities\n          | selectattr('state','${t}','${i}')\n          | selectattr('state','ne','unavailable')\n          | selectattr('state','ne','unknown')\n          | list\n          | count\n        }}`):((0,r.OG)(r.br,"Registry is not initialized!"),"?")}static getExposedNames(e){const t=l.strategyOptions[`${e}s`];return Object.keys(t).filter(e=>"_"!==e&&"default"!==e&&!t[e].hidden)}}l._initialized=!1,l._areas=[]},245:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});var n=i(241),s=i(987),a=i(122);class r extends a.default{static getDefaultConfig(){return{title:(0,s.k)("fan.fans"),path:"fans",icon:"mdi:fan",subview:!1,headerCardConfiguration:{iconOn:"mdi:fan",iconOff:"mdi:fan-off",onService:"fan.turn_on",offService:"fan.turn_off"}}}static getViewHeaderCardConfig(){return{title:(0,s.k)("fan.all_fans"),subtitle:`${n.O.getCountTemplate(r.domain,"eq","on")} ${(0,s.k)("fan.fans")} `+(0,s.k)("generic.on")}}constructor(e){super(),this.initializeViewConfig(r.getDefaultConfig(),e,r.getViewHeaderCardConfig())}}r.domain="fan";const o=r},254:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>r});var n=i(700),s=i(818);class a extends s.default{static getDefaultConfig(){return{type:"custom:mushroom-light-card",icon:void 0,show_brightness_control:!0,show_color_control:!0,show_color_temp_control:!0,use_light_color:!0,double_tap_action:{action:"call-service",perform_action:"light.turn_on",target:{entity_id:void 0},data:{rgb_color:[255,255,255]}}}}constructor(e,t){super(e);const i=a.getDefaultConfig();(0,n.eq)(i.double_tap_action)&&(i.double_tap_action.target={entity_id:e.entity_id}),this.configuration={...this.configuration,...i,...t}}}const r=a},255:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});var n=i(241),s=i(987),a=i(122);class r extends a.default{static getDefaultConfig(){return{title:(0,s.k)("camera.cameras"),path:"cameras",icon:"mdi:cctv",subview:!1,headerCardConfiguration:{showControls:!1}}}static getViewHeaderCardConfig(){return{title:(0,s.k)("camera.all_cameras"),subtitle:`${n.O.getCountTemplate(r.domain,"ne","off")} ${(0,s.k)("camera.cameras")} `+(0,s.k)("generic.busy")}}constructor(e){super(),this.initializeViewConfig(r.getDefaultConfig(),e,r.getViewHeaderCardConfig())}}r.domain="camera";const o=r},301:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>a});var n=i(818);class s extends n.default{static getDefaultConfig(){return{type:"custom:mushroom-template-card",primary:void 0,icon:"mdi:floor-plan",icon_color:"blue",tap_action:{action:"navigate",navigation_path:""},hold_action:{action:"none"}}}constructor(e,t){super(e);const i=s.getDefaultConfig();let n=t;i.primary=e.name,i.icon=e.icon||i.icon,i.tap_action&&"navigation_path"in i.tap_action&&(i.tap_action.navigation_path=e.area_id),n&&(n={...n,type:i.type}),this.configuration={...this.configuration,...i,...n}}}const a=s},304:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});var n=i(122),s=i(241),a=i(987);class r extends n.default{constructor(e){super(),this.initializeViewConfig(r.getDefaultConfig(),e,r.getViewHeaderCardConfig())}static getDefaultConfig(){return{title:(0,a.k)("light.lights"),path:"lights",icon:"mdi:lightbulb-group",subview:!1,headerCardConfiguration:{iconOn:"mdi:lightbulb",iconOff:"mdi:lightbulb-off",onService:"light.turn_on",offService:"light.turn_off"}}}static getViewHeaderCardConfig(){return{title:(0,a.k)("light.all_lights"),subtitle:`${s.O.getCountTemplate(r.domain,"eq","on")} ${(0,a.k)("light.lights")} `+(0,a.k)("generic.on")}}}r.domain="light";const o=r},464:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});var n=i(241),s=i(987),a=i(122);class r extends a.default{static getDefaultConfig(){return{title:(0,s.k)("switch.switches"),path:"switches",icon:"mdi:dip-switch",subview:!1,headerCardConfiguration:{iconOn:"mdi:power-plug",iconOff:"mdi:power-plug-off",onService:"switch.turn_on",offService:"switch.turn_off"}}}static getViewHeaderCardConfig(){return{title:(0,s.k)("switch.all_switches"),subtitle:`${n.O.getCountTemplate(r.domain,"eq","on")} ${(0,s.k)("switch.switches")} `+(0,s.k)("generic.on")}}constructor(e){super(),this.initializeViewConfig(r.getDefaultConfig(),e,r.getViewHeaderCardConfig())}}r.domain="switch";const o=r},483:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>r});const n=["on_off","start_pause","stop","locate","clean_spot","return_home"];var s=i(818);class a extends s.default{static getDefaultConfig(){return{type:"custom:mushroom-vacuum-card",icon:void 0,icon_animation:!0,commands:[...n],tap_action:{action:"more-info"}}}constructor(e,t){super(e),this.configuration={...this.configuration,...a.getDefaultConfig(),...t}}}const r=a},486:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>a});var n=i(818);class s extends n.default{static getDefaultConfig(){return{type:"custom:mushroom-entity-card",icon_color:"blue-grey"}}constructor(e,t){super(e),this.configuration={...this.configuration,...s.getDefaultConfig(),...t}}}const a=s},499:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});var n=i(241),s=i(987),a=i(122);class r extends a.default{static getDefaultConfig(){return{title:(0,s.k)("vacuum.vacuums"),path:"vacuums",icon:"mdi:robot-vacuum",subview:!1,headerCardConfiguration:{iconOn:"mdi:robot-vacuum",iconOff:"mdi:robot-vacuum-off",onService:"vacuum.start",offService:"vacuum.stop"}}}static getViewHeaderCardConfig(){return{title:(0,s.k)("vacuum.all_vacuums"),subtitle:n.O.getCountTemplate(r.domain,"in","[cleaning, returning]")+` ${(0,s.k)("vacuum.vacuums")} ${(0,s.k)("generic.busy")}`}}constructor(e){super(),this.initializeViewConfig(r.getDefaultConfig(),e,r.getViewHeaderCardConfig())}}r.domain="vacuum";const o=r},547:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});var n=i(241),s=i(987),a=i(122);class r extends a.default{static getDefaultConfig(){return{title:(0,s.k)("cover.covers"),path:"covers",icon:"mdi:window-open",subview:!1,headerCardConfiguration:{iconOn:"mdi:arrow-up",iconOff:"mdi:arrow-down",onService:"cover.open_cover",offService:"cover.close_cover"}}}static getViewHeaderCardConfig(){return{title:(0,s.k)("cover.all_covers"),subtitle:`${n.O.getCountTemplate(r.domain,"search","(open|opening|closing)")} ${(0,s.k)("cover.covers")} ${(0,s.k)("generic.unclosed")}`}}constructor(e){super(),this.initializeViewConfig(r.getDefaultConfig(),e,r.getViewHeaderCardConfig())}}r.domain="cover";const o=r},555:(e,t,i)=>{var n={"./AbstractView":[122,792],"./AbstractView.ts":[122,792],"./CameraView":[255,792],"./CameraView.ts":[255,792],"./ClimateView":[559,792],"./ClimateView.ts":[559,792],"./CoverView":[547,792],"./CoverView.ts":[547,792],"./FanView":[245,792],"./FanView.ts":[245,792],"./HomeView":[31,792],"./HomeView.ts":[31,792],"./LightView":[304,792],"./LightView.ts":[304,792],"./LockView":[935,792],"./LockView.ts":[935,792],"./SceneView":[204,792],"./SceneView.ts":[204,792],"./SwitchView":[464,792],"./SwitchView.ts":[464,792],"./VacuumView":[499,792],"./VacuumView.ts":[499,792],"./ValveView":[798,792],"./ValveView.ts":[798,792]};function s(e){if(!i.o(n,e))return Promise.resolve().then(()=>{var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t});var t=n[e],s=t[0];return i.e(t[1]).then(()=>i(s))}s.keys=()=>Object.keys(n),s.id=555,e.exports=s},559:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});var n=i(241),s=i(987),a=i(122);class r extends a.default{static getDefaultConfig(){return{title:(0,s.k)("climate.climates"),path:"climates",icon:"mdi:thermostat",subview:!1,headerCardConfiguration:{showControls:!1}}}static getViewHeaderCardConfig(){return{title:(0,s.k)("climate.all_climates"),subtitle:`${n.O.getCountTemplate(r.domain,"ne","off")} ${(0,s.k)("climate.climates")} `+(0,s.k)("generic.busy")}}constructor(e){super(),this.initializeViewConfig(r.getDefaultConfig(),e,r.getViewHeaderCardConfig())}}r.domain="climate";const o=r},560:(e,t,i)=>{var n={"./AbstractCard":[818],"./AbstractCard.ts":[818],"./AreaCard":[301,792],"./AreaCard.ts":[301,792],"./CameraCard":[723,792],"./CameraCard.ts":[723,792],"./ClimateCard":[721,792],"./ClimateCard.ts":[721,792],"./CoverCard":[33,792],"./CoverCard.ts":[33,792],"./FanCard":[667,792],"./FanCard.ts":[667,792],"./HeaderCard":[137],"./HeaderCard.ts":[137],"./LightCard":[254,792],"./LightCard.ts":[254,792],"./LockCard":[936,792],"./LockCard.ts":[936,792],"./MiscellaneousCard":[486,792],"./MiscellaneousCard.ts":[486,792],"./PersonCard":[845,792],"./PersonCard.ts":[845,792],"./SceneCard":[858,792],"./SceneCard.ts":[858,792],"./SensorCard":[982],"./SensorCard.ts":[982],"./SwitchCard":[708,792],"./SwitchCard.ts":[708,792],"./TileCard":[179,792],"./TileCard.ts":[179,792],"./VacuumCard":[483,792],"./VacuumCard.ts":[483,792],"./ValveCard":[868,792],"./ValveCard.ts":[868,792]};function s(e){if(!i.o(n,e))return Promise.resolve().then(()=>{var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t});var t=n[e],s=t[0];return Promise.all(t.slice(1).map(i.e)).then(()=>i(s))}s.keys=()=>Object.keys(n),s.id=560,e.exports=s},667:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>a});var n=i(818);class s extends n.default{static getDefaultConfig(){return{type:"custom:mushroom-fan-card",icon:void 0,show_percentage_control:!0,show_oscillate_control:!0,icon_animation:!0}}constructor(e,t){super(e),this.configuration={...this.configuration,...s.getDefaultConfig(),...t}}}const a=s},682:(e,t,i)=>{"use strict";i.d(t,{A:()=>r});var n=i(241),s=i(964);class a{constructor(e){this.filters=[],this.invertNext=!1,this.entries=e,this.entryIdentifier=0===e.length||"entity_id"in e[0]?"entity_id":"floor_id"in e[0]?"area_id":"id"}not(){return this.invertNext=!this.invertNext,this}resetFilters(){return this.filters=[],this.invertNext=!1,this}where(e){return this.filters.push(this.checkInversion(e)),this}whereAreaId(e,t=!0){return this.filters.push(this.checkInversion(i=>{let s;const a=i;return t&&a.device_id&&(s=n.O.devices.find(e=>e.id===a.device_id)?.area_id),e?"undisclosed"===e?i.area_id===e&&(s===e||null==s):i.area_id===e||"undisclosed"===i.area_id&&s===e:i.area_id===e&&s===e})),this}whereNameContains(e){const t=e.toLowerCase();return this.filters.push(this.checkInversion(e=>{const i=e;return[i.name,i.original_name,i.name_by_user].filter(e=>"string"==typeof e).some(e=>e.toLowerCase().includes(t))})),this}whereDomain(e){const t=e+".";return this.filters.push(this.checkInversion(e=>"entity_id"in e&&e.entity_id.startsWith(t))),this}whereFloorId(e){return this.filters.push(this.checkInversion(t=>{const i="floor_id"in t;return void 0===e?!i:i&&t.floor_id===e})),this}whereDeviceId(e){return this.filters.push(this.checkInversion(t=>{const i="id"in t,n="device_id"in t;return void 0===e?!i&&!n:i&&t.id===e||n&&t.device_id===e})),this}whereEntityId(e){return this.filters.push(this.checkInversion(t=>void 0===e?!("entity_id"in t):"entity_id"in t&&t.entity_id===e)),this}whereDisabledBy(e){return this.filters.push(this.checkInversion(t=>{const i="disabled_by"in t;return void 0===e?!i:i&&t.disabled_by===e})),this}whereHiddenBy(e){return this.filters.push(this.checkInversion(t=>{const i="hidden_by"in t;return void 0===e?!i:i&&t.hidden_by===e})),this}isNotHidden(e=!0){return this.filters.push(this.checkInversion(t=>{const i="hidden_by"in t&&t.hidden_by;if(!e)return!i;const s=t[this.entryIdentifier],a="area_id"===this.entryIdentifier?{...n.O.strategyOptions.areas._,...n.O.strategyOptions.areas[s]}:n.O.strategyOptions.card_options?.[s];return!(i||!0===a?.hidden)})),this}whereEntityCategory(e){const t=this.invertNext;return this.invertNext=!1,this.filters.push(i=>{const s="entity_category"in i?i.entity_category:void 0,a="string"==typeof s?n.O.strategyOptions?.domains?._?.[`hide_${s}_entities`]:void 0;return!0!==a&&(!1===a&&s===e||(t?s!==e:s===e))}),this}orderBy(e,t="asc"){const i=(e,t)=>{for(const i of t){const t=e[i];if(null!=t)return t}},n=e=>{switch(e){case-1/0:return[0,0];case void 0:case null:return[2,0];case 1/0:return[3,0];default:return[1,e]}},s=[...this.entries].sort((s,a)=>{const r=i(s,e),o=i(a,e);if(r===o)return 0;const[c,l]=n(r),[d,u]=n(o);return c!==d?(c-d)*("asc"===t?1:-1):null==l?1:null==u?-1:"string"==typeof l&&"string"==typeof u?l.localeCompare(u)*("asc"===t?1:-1):(l<u?-1:1)*("asc"===t?1:-1)}),r=new a(s);return r.filters=[...this.filters],r}take(e){const t=Math.max(0,e);return this.filters.push((e,i)=>i<t),this}skip(e){const t=Math.max(0,e);return this.filters.push((e,i)=>i>=t),this}toList(){const e=new a(this.entries);return e.filters=[...this.filters],e.entries.filter((t,i)=>e.filters.every(e=>e(t,i)))}getValuesByProperty(e){return this.toList().map(t=>t[e]).filter(e=>void 0!==e)}first(){const e=new a(this.entries);return e.filters=[...this.filters],e.entries.find((t,i)=>e.filters.every(e=>e(t,i)))}single(){const e=new a(this.entries);e.filters=[...this.filters];const t=e.entries.filter((t,i)=>e.filters.every(e=>e(t,i)));if(1===t.length)return t[0];(0,s.OG)(s.br,`Expected a single element, but found ${t.length}.`)}count(){const e=new a(this.entries);return e.filters=[...this.filters],e.entries.filter((t,i)=>e.filters.every(e=>e(t,i))).length}checkInversion(e){return this.invertNext?(this.invertNext=!1,t=>!e(t)):e}}const r=a},688:(e,t,i)=>{"use strict";i.d(t,{ConfigurationDefaults:()=>s});var n=i(987);const s={areas:{_:{type:"AreaCard"},undisclosed:{aliases:[],area_id:"undisclosed",created_at:0,floor_id:null,hidden:!1,humidity_entity_id:null,icon:null,labels:[],modified_at:0,name:(0,n.k)("generic.undisclosed"),picture:null,temperature_entity_id:null,order:1/0}},card_options:{},debug:!1,domains:{_:{hide_config_entities:void 0,hide_diagnostic_entities:void 0,showControls:!0,stack_count:1},binary_sensor:{title:`${(0,n.k)("sensor.binary")} `+(0,n.k)("sensor.sensors"),showControls:!1,hidden:!1,stack_count:2},camera:{title:(0,n.k)("camera.cameras"),showControls:!1,hidden:!1},climate:{title:(0,n.k)("climate.climates"),showControls:!1,hidden:!1},cover:{title:(0,n.k)("cover.covers"),iconOn:"mdi:arrow-up",iconOff:"mdi:arrow-down",onService:"cover.open_cover",offService:"cover.close_cover",hidden:!1},default:{title:(0,n.k)("generic.miscellaneous"),showControls:!1,hidden:!1},fan:{title:(0,n.k)("fan.fans"),iconOn:"mdi:fan",iconOff:"mdi:fan-off",onService:"fan.turn_on",offService:"fan.turn_off",hidden:!1},input_select:{title:(0,n.k)("input_select.input_selects"),showControls:!1,hidden:!1},light:{title:(0,n.k)("light.lights"),iconOn:"mdi:lightbulb",iconOff:"mdi:lightbulb-off",onService:"light.turn_on",offService:"light.turn_off",hidden:!1},lock:{title:(0,n.k)("lock.locks"),showControls:!1,hidden:!1},media_player:{title:(0,n.k)("media_player.media_players"),showControls:!1,hidden:!1},number:{title:(0,n.k)("generic.numbers"),showControls:!1,hidden:!1},scene:{title:(0,n.k)("scene.scenes"),showControls:!1,onService:"scene.turn_on",hidden:!1},select:{title:(0,n.k)("select.selects"),showControls:!1,hidden:!1},sensor:{title:(0,n.k)("sensor.sensors"),showControls:!1,hidden:!1},switch:{title:(0,n.k)("switch.switches"),iconOn:"mdi:power-plug",iconOff:"mdi:power-plug-off",onService:"switch.turn_on",offService:"switch.turn_off",hidden:!1},vacuum:{title:(0,n.k)("vacuum.vacuums"),iconOn:"mdi:robot-vacuum",iconOff:"mdi:robot-vacuum-off",onService:"vacuum.start",offService:"vacuum.stop",hidden:!1},valve:{title:(0,n.k)("valve.valves"),iconOn:"mdi:valve-open",iconOff:"mdi:valve-closed",onService:"valve.open_valve",offService:"valve.close_valve",hidden:!1}},extra_cards:[],extra_views:[],home_view:{hidden:[],stack_count:{_:2}},views:{camera:{order:7,hidden:!1},climate:{order:6,hidden:!1},cover:{order:4,hidden:!1},fan:{order:3,hidden:!1},home:{order:1,hidden:!1},light:{order:2,hidden:!1},lock:{order:10,hidden:!1},scene:{order:9,hidden:!1},switch:{order:5,hidden:!1},vacuum:{order:8,hidden:!1},valve:{order:11,hidden:!1}},quick_access_cards:[]}},700:(e,t,i)=>{"use strict";i.d(t,{dQ:()=>l,eq:()=>r,uS:()=>c,vv:()=>a});const n=["_","binary_sensor","camera","climate","cover","default","fan","input_select","light","lock","media_player","number","scene","select","sensor","switch","vacuum","valve"],s=["camera","climate","cover","fan","home","light","lock","scene","switch","vacuum","valve"];function a(e){return e&&("order"in e||"title"in e||"name"in e)}function r(e){return!!e&&("perform-action"===e.action||"call-service"===e.action)&&"perform_action"in e}function o(e,t){return t.includes(e)}function c(e){return o(e,s)}function l(e){return o(e,n)}},708:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>a});var n=i(818);class s extends n.default{static getDefaultConfig(){return{type:"custom:mushroom-entity-card",icon:void 0,tap_action:{action:"toggle"}}}constructor(e,t){super(e),this.configuration={...this.configuration,...s.getDefaultConfig(),...t}}}const a=s},721:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>a});var n=i(818);class s extends n.default{static getDefaultConfig(){return{type:"custom:mushroom-climate-card",icon:void 0,hvac_modes:["off","cool","heat","fan_only"],show_temperature_control:!0}}constructor(e,t){super(e),this.configuration={...this.configuration,...s.getDefaultConfig(),...t}}}const a=s},723:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>a});var n=i(818);class s extends n.default{static getDefaultConfig(){return{entity:"",type:"picture-entity",show_name:!1,show_state:!1,camera_view:"live"}}constructor(e,t){super(e),this.configuration={...this.configuration,...s.getDefaultConfig(),...t}}}const a=s},737:(e,t,i)=>{"use strict";function n(e,t=2,i){if(e.length<=1)return e;const n=(e,t)=>{if(e.length<=1)return e;const i=[];for(let n=0;n<e.length;n+=t)i.push({type:"horizontal-stack",cards:e.slice(n,n+t)});return i},s=[];for(let a=0;a<e.length;){const r=e[a].type,o=[];for(;a<e.length&&e[a].type===r;)o.push(e[a]),a++;const c=Math.max(i?.[r]||t,1);s.push(...n(o,c))}return s}i.d(t,{P:()=>n})},744:e=>{"use strict";var t=function(e){return function(e){return!!e&&"object"==typeof e}(e)&&!function(e){var t=Object.prototype.toString.call(e);return"[object RegExp]"===t||"[object Date]"===t||function(e){return e.$$typeof===i}(e)}(e)},i="function"==typeof Symbol&&Symbol.for?Symbol.for("react.element"):60103;function n(e,t){return!1!==t.clone&&t.isMergeableObject(e)?o((i=e,Array.isArray(i)?[]:{}),e,t):e;var i}function s(e,t,i){return e.concat(t).map(function(e){return n(e,i)})}function a(e){return Object.keys(e).concat(function(e){return Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(e).filter(function(t){return Object.propertyIsEnumerable.call(e,t)}):[]}(e))}function r(e,t){try{return t in e}catch(e){return!1}}function o(e,i,c){(c=c||{}).arrayMerge=c.arrayMerge||s,c.isMergeableObject=c.isMergeableObject||t,c.cloneUnlessOtherwiseSpecified=n;var l=Array.isArray(i);return l===Array.isArray(e)?l?c.arrayMerge(e,i,c):function(e,t,i){var s={};return i.isMergeableObject(e)&&a(e).forEach(function(t){s[t]=n(e[t],i)}),a(t).forEach(function(a){(function(e,t){return r(e,t)&&!(Object.hasOwnProperty.call(e,t)&&Object.propertyIsEnumerable.call(e,t))})(e,a)||(r(e,a)&&i.isMergeableObject(t[a])?s[a]=function(e,t){if(!t.customMerge)return o;var i=t.customMerge(e);return"function"==typeof i?i:o}(a,i)(e[a],t[a],i):s[a]=n(t[a],i))}),s}(e,i,c):n(i,c)}o.all=function(e,t){if(!Array.isArray(e))throw new Error("first argument should be an array");return e.reduce(function(e,i){return o(e,i,t)},{})};var c=o;e.exports=c},798:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});var n=i(241),s=i(987),a=i(122);class r extends a.default{constructor(e){super(),this.initializeViewConfig(r.getDefaultConfig(),e,r.getViewHeaderCardConfig())}static getDefaultConfig(){return{title:(0,s.k)("valve.valves"),path:"valves",icon:"mdi:valve",subview:!1,headerCardConfiguration:{iconOn:"mdi:valve-open",iconOff:"mdi:valve-closed",onService:"valve.open_valve",offService:"valve.close_valve"}}}static getViewHeaderCardConfig(){return{title:(0,s.k)("valve.all_valves"),subtitle:n.O.getCountTemplate(r.domain,"in","[closed]")+` ${(0,s.k)("valve.valves")} ${(0,s.k)("valve.unclosed")}`}}}r.domain="valve";const o=r},818:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>a});var n=i(241),s=i(964);const a=class{constructor(e){this.configuration={type:"custom:mushroom-entity-card",icon:"mdi:help-circle"},n.O.initialized||(0,s.OG)(s.ZY,"Registry not initialized!"),this.entity=e}getCard(){return{...this.configuration,entity:"entity_id"in this.entity?this.entity.entity_id:void 0}}}},845:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>a});var n=i(818);class s extends n.default{static getDefaultConfig(){return{type:"custom:mushroom-person-card",layout:"vertical",primary_info:"none",secondary_info:"none",icon_type:"entity-picture"}}constructor(e,t){super(e),this.configuration={...this.configuration,...s.getDefaultConfig(),...t}}}const a=s},858:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>c});var n=i(241),s=i(818),a=i(708),r=i(700);class o extends s.default{static getDefaultConfig(){return{type:"custom:mushroom-entity-card",tap_action:{action:"perform-action",perform_action:"scene.turn_on",target:{}}}}constructor(e,t){const i=e.entity_id.split(".").pop(),s=n.O.entities.find(e=>e.entity_id===`switch.${i}_stateful_scene`);if(super(s??e),s)return void(this.configuration=new a.default(s).getCard());const c=o.getDefaultConfig();(0,r.eq)(c.tap_action)&&(c.tap_action.target={entity_id:e.entity_id}),c.icon=n.O.hassStates[e.entity_id]?.attributes.icon??c.icon,this.configuration={...this.configuration,...c,...t}}}const c=o},868:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>r});var n=i(987),s=i(818);class a extends s.default{static getDefaultConfig(){return{type:"custom:mushroom-template-card",icon:"mdi:valve",icon_color:"blue",double_tap_action:{action:"toggle"}}}constructor(e,t){super(e);const i=a.getDefaultConfig();i.entity=e.entity_id,i.icon=e.icon??i.icon,i.primary=e.name??e.original_name??"?",i.secondary=`{% \n                                 set mapping = {\n                                   'open': '${(0,n.k)("valve.open")}',\n                                   'opening': '${(0,n.k)("valve.opening")}',\n                                   'closed': '${(0,n.k)("valve.closed")}',\n                                   'closing': '${(0,n.k)("valve.closing")}',\n                                   'stopped': '${(0,n.k)("valve.stopped")}',\n                                   'unavailable': '${(0,n.k)("generic.unavailable")}'\n                                 }\n                               %}\n                               {{ mapping.get(states('${e.entity_id}'), '${(0,n.k)("generic.unknown")}') }}`,this.configuration={...this.configuration,...i,...t}}}const r=a},935:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});var n=i(241),s=i(987),a=i(122);class r extends a.default{static getDefaultConfig(){return{title:(0,s.k)("locks.locks"),path:"locks",icon:"mdi:lock-open",subview:!1,headerCardConfiguration:{iconOn:"mdi:lock-open",iconOff:"mdi:lock",onService:"lock.lock",offService:"lock.unlock"}}}static getViewHeaderCardConfig(){return{title:(0,s.k)("lock.all_locks"),subtitle:`${n.O.getCountTemplate(r.domain,"ne","locked")} ${(0,s.k)("lock.locks")} `+(0,s.k)("lock.unlocked")}}constructor(e){super(),this.initializeViewConfig(r.getDefaultConfig(),e,r.getViewHeaderCardConfig())}}r.domain="lock";const o=r},936:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>a});var n=i(818);class s extends n.default{static getDefaultConfig(){return{type:"custom:mushroom-lock-card",icon:void 0}}constructor(e,t){super(e),this.configuration={...this.configuration,...s.getDefaultConfig(),...t}}}const a=s},964:(e,t,i)=>{"use strict";i.d(t,{OG:()=>g,QC:()=>a,Ux:()=>f,ZY:()=>d,br:()=>c,nR:()=>l,tm:()=>o});var n,s=i(7);!function(e){e[e.Off=0]="Off",e[e.Debug=1]="Debug",e[e.Info=2]="Info",e[e.Warn=3]="Warn",e[e.Error=4]="Error",e[e.Fatal=5]="Fatal"}(n||(n={}));const{Off:a,Debug:r,Info:o,Warn:c,Error:l,Fatal:d}=n;let u=n.Fatal;function f(e){u=e}function g(e,t,...i){if(u===n.Off||e>u)return;const a="Strategy - An error occurred. Check the console (F12) for details.",r=`[${n[e].toUpperCase()}]`,o=i.map(s.G),c=`[at ${function(e){if(!e)return"unknown";const t=e.split("\n").filter(Boolean);for(let e=1;e<t.length;e++){const i=t[e].trim();if(i.includes("@")&&!i.startsWith("logMessage"))return i.split("@")[0]||"anonymous";if(i.startsWith("@"))return"anonymous function"}for(let e=1;e<t.length;e++){const i=t[e].match(/at ([^( ]+)/);if(i&&i[1]&&"logMessage"!==i[1])return i[1]}return"unknown function"}((new Error).stack)}]`;switch(e){case n.Debug:console.debug(`${r}${c} ${t}`,...o);break;case n.Info:console.info(`${r}${c} ${t}`,...o);break;case n.Warn:console.warn(`${r}${c} ${t}`,...o);break;case n.Error:throw console.error(`${r}${c} ${t}`,...o),a;case n.Fatal:throw console.error(`${r}${c} ${t}`,...o),alert?.(`${r} ${t}`),a}}},982:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>a});var n=i(818);class s extends n.default{static getDefaultConfig(){return{type:"custom:mushroom-entity-card",icon:"mdi:information",animate:!0,line_color:"green"}}constructor(e,t){super(e),this.configuration={...this.configuration,...s.getDefaultConfig(),...t}}}const a=s},987:(e,t,i)=>{"use strict";i.d(t,{A:()=>_,k:()=>y});const n=JSON.parse('{"camera":{"all_cameras":"Alle Kameras","cameras":"Kameras"},"climate":{"all_climates":"Alle Klimaanlagen","climates":"Klimaanlagen"},"cover":{"all_covers":"Alle Abdeckungen","covers":"Abdeckungen"},"fan":{"all_fans":"Alle Ventilatoren","fans":"Ventilatoren"},"generic":{"all":"Alle","areas":"Bereiche","busy":"Beschäftigt","good_afternoon":"Guten Nachmittag","good_evening":"Guten Abend","good_morning":"Guten Morgen","hello":"Hallo","home":"Start","miscellaneous":"Sonstiges","numbers":"Zahlen","off":"Aus","on":"Ein","open":"Offen","unavailable":"Nicht verfügbar","unclosed":"Nicht Geschlossen","undisclosed":"Sonstiges","unknown":"Unbekannt"},"input_select":{"input_selects":"Auswahl-Eingaben"},"light":{"all_lights":"Alle Leuchten","lights":"Leuchten"},"lock":{"locked":"Gesperrt","all_locks":"Alle Schlösser","locks":"Schlösser","unlocked":"Entsperrt"},"media_player":{"media_players":"Wiedergabegeräte"},"scene":{"scenes":"Szenen"},"select":{"selects":"Auswahlen"},"sensor":{"binary":"Binäre","sensors":"Sensoren"},"switch":{"all_switches":"Alle Schalter","switches":"Schalter"},"vacuum":{"all_vacuums":"Alle Staubsauger","vacuums":"Staubsauger"},"valve":{"all_valves":"Alle Ventile","valves":"Ventile","open":"Offen","opening":"Öffnet","closed":"Geschlossen","closing":"Schließt","stopped":"Gestoppt","unclosed":"Nicht geschlossen"}}');var s=i.t(n,2);const a=JSON.parse('{"camera":{"all_cameras":"All Cameras","cameras":"Cameras"},"climate":{"all_climates":"All Climates","climates":"Climates"},"cover":{"all_covers":"All Covers","covers":"Covers"},"fan":{"all_fans":"All Fans","fans":"Fans"},"generic":{"all":"All","areas":"Areas","busy":"Busy","good_afternoon":"Good afternoon","good_evening":"Good evening","good_morning":"Good morning","hello":"Hello","home":"Home","miscellaneous":"Miscellaneous","numbers":"Numbers","off":"Off","on":"On","open":"Open","unavailable":"Unavailable","unclosed":"Unclosed","undisclosed":"Other","unknown":"Unknown"},"input_select":{"input_selects":"Input Selects"},"light":{"all_lights":"All Lights","lights":"Lights"},"lock":{"all_locks":"All Locks","locked":"Locked","locks":"Locks","unlocked":"Unlocked"},"media_player":{"media_players":"Media Players"},"scene":{"scenes":"Scenes"},"select":{"selects":"Selects"},"sensor":{"binary":"Binary","sensors":"Sensors"},"switch":{"all_switches":"All Switches","switches":"Switches"},"vacuum":{"all_vacuums":"All Vacuums","vacuums":"Vacuums"},"valve":{"all_valves":"All Valves","valves":"Valves","open":"Open","opening":"Opening","closed":"Closed","closing":"Closing","stopped":"Stopped","unclosed":"Unclosed"}}');var r=i.t(a,2);const o=JSON.parse('{"camera":{"all_cameras":"Todas las Cámaras","cameras":"Cámaras"},"climate":{"all_climates":"Todos los Termostatos","climates":"Termostatos"},"cover":{"all_covers":"Todas las Cubiertas","covers":"Cubiertas"},"fan":{"all_fans":"Todos los Ventiladores","fans":"Ventiladores"},"generic":{"all":"Todo","areas":"Áreas","busy":"Ocupado","good_afternoon":"Buenas tardes","good_evening":"Buenas noches","good_morning":"Buenos días","hello":"Hola","home":"Inicio","miscellaneous":"Varios","numbers":"Números","off":"Apagado","on":"Encendido","open":"Abierto","unavailable":"No Disponible","unclosed":"Sin Cerrar","undisclosed":"Varios","unknown":"Desconocido"},"input_select":{"input_selects":"Selecciones de Entrada"},"light":{"all_lights":"Todas las Luces","lights":"Luces"},"lock":{"all_locks":"Todas las Candados","locked":"Locked","locks":"Candados","unlocked":"Desbloqueado"},"media_player":{"media_players":"Reproductores Multimedia"},"scene":{"scenes":"Scenas"},"select":{"selects":"Seleccionar"},"sensor":{"binary":"Binario","sensors":"Sensores"},"switch":{"all_switches":"Todos los Apagadores","switches":"Apagadores"},"vacuum":{"all_vacuums":"Todas las Aspiradoras","vacuums":"Aspiradoras"},"valve":{"all_valves":"Todas las válvulas","valves":"Válvulas","open":"Abierta","opening":"Abriendo","closed":"Cerrada","closing":"Cerrando","stopped":"Detenida","unclosed":"No Cerrada"}}');var c=i.t(o,2);const l=JSON.parse('{"camera":{"all_cameras":"Alle Cameras","cameras":"Cameras"},"climate":{"all_climates":"Alle Klimaatregelingen","climates":"Klimaatregelingen"},"cover":{"all_covers":"Alle Bedekkingen","covers":"Bedekkingen"},"fan":{"all_fans":"Alle Ventilatoren","fans":"Ventilatoren"},"generic":{"all":"Alle","areas":"Ruimtes","busy":"Bezig","good_afternoon":"Goedemiddag","good_evening":"Goedeavond","good_morning":"Goedemorgen","hello":"Hallo","home":"Start","miscellaneous":"Overige","numbers":"Nummers","off":"Uit","on":"Aan","open":"Open","unavailable":"Onbeschikbaar","unclosed":"Niet Gesloten","undisclosed":"Overige","unknown":"Onbekend"},"input_select":{"input_selects":"Lijsten"},"light":{"all_lights":"Alle Lampen","lights":"Lampen"},"lock":{"all_locks":"Alle Sloten","locked":"Vergrendeld","locks":"Sloten","unlocked":"Ontgrendeld"},"media_player":{"media_players":"Mediaspelers"},"scene":{"scenes":"Scenes"},"select":{"selects":"Statuslijsten"},"sensor":{"binary":"Binaire","sensors":"Sensoren"},"switch":{"all_switches":"Alle Schakelaars","switches":"Schakelaars"},"vacuum":{"all_vacuums":"Alle Afzuiging","vacuums":"Afzuiging"},"valve":{"all_valves":"Alle kleppen","valves":"Kleppen","open":"Open","opening":"Openen","closed":"Gesloten","closing":"Sluiten","stopped":"Gestopt","unclosed":"Niet gesloten"}}');var d=i.t(l,2);const u=JSON.parse('{"camera":{"all_cameras":"Todas as câmeras","cameras":"Câmeras"},"climate":{"all_climates":"Todos os climatizadores","climates":"Climatizadores"},"cover":{"all_covers":"Todas as persianas","covers":"Persianas"},"fan":{"all_fans":"Todos os ventiladores","fans":"Ventiladores"},"generic":{"all":"Todos","areas":"Áreas","busy":"Ocupado","good_afternoon":"Boa tarde","good_evening":"Boa noite","good_morning":"Bom dia","hello":"Olá","home":"Início","miscellaneous":"Variados","numbers":"Números","off":"Desligado","on":"Ligado","open":"Aberto","unavailable":"Indisponível","unclosed":"Não fechado","undisclosed":"Outro","unknown":"Desconhecido"},"input_select":{"input_selects":"Seleção de entrada"},"light":{"all_lights":"Todas as luzes","lights":"Luzes"},"lock":{"all_locks":"Todas as fechaduras","locked":"Travado","locks":"Fechaduras","unlocked":"Destravado"},"media_player":{"media_players":"Reprodutores de mídia"},"scene":{"scenes":"Cenas"},"select":{"selects":"Seleção"},"sensor":{"binary":"Binário","sensors":"Sensores"},"switch":{"all_switches":"Todos os interruptores","switches":"Interruptores"},"vacuum":{"all_vacuums":"Todos os aspiradores","vacuums":"Aspiradores"},"valve":{"all_valves":"Todas as válvulas","valves":"Válvulas","open":"Aberto","opening":"Abrindo","closed":"Fechado","closing":"Fechando","stopped":"Parado","unclosed":"Nao fechado"}}');var f=i.t(u,2),g=i(964);const h={de:s,en:r,es:c,nl:d,"pt-BR":f},m="en";function p(e,t){try{return e.split(".").reduce((e,t)=>e[t],h[t])}catch{return}}let v;function _(e){const t=e?.locale.language??m;v=e=>p(e,t)??p(e,m)??e}function y(e){return v?v(e):((0,g.OG)(g.br,"localize is not initialized! Call setupCustomLocalize first."),e)}}},n={};function s(e){var t=n[e];if(void 0!==t)return t.exports;var a=n[e]={exports:{}};return i[e](a,a.exports,s),a.exports}s.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return s.d(t,{a:t}),t},t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,s.t=function(i,n){if(1&n&&(i=this(i)),8&n)return i;if("object"==typeof i&&i){if(4&n&&i.__esModule)return i;if(16&n&&"function"==typeof i.then)return i}var a=Object.create(null);s.r(a);var r={};e=e||[null,t({}),t([]),t(t)];for(var o=2&n&&i;("object"==typeof o||"function"==typeof o)&&!~e.indexOf(o);o=t(o))Object.getOwnPropertyNames(o).forEach(e=>r[e]=()=>i[e]);return r.default=()=>i,s.d(a,r),a},s.d=(e,t)=>{for(var i in t)s.o(t,i)&&!s.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},s.e=()=>Promise.resolve(),s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{"use strict";var e=s(137),t=s(982),i=s(241),n=s(700),a=s(7),r=s(964),o=s(682),c=s(737);class l extends HTMLTemplateElement{static async generateDashboard(e){await i.O.initialize(e);const t=[],o=i.O.getExposedNames("view").filter(n.uS).map(async e=>{try{const t=(0,a.p)(`${e}View`),n=new(0,(await s(555)(`./${t}`)).default)(i.O.strategyOptions.views[e]),o=await n.getView();if(o.cards.length)return o;(0,r.OG)(r.tm,`View ${e} has no entities available!`)}catch(t){(0,r.OG)(r.nR,`Error importing ${e} view!`,t)}return null}),c=(await Promise.all(o)).filter(Boolean);return t.push(...c),i.O.strategyOptions.extra_views&&(t.push(...i.O.strategyOptions.extra_views),t.sort((e,t)=>(e.order??1/0)-(t.order??1/0)||(e.title??"").localeCompare(t.title??""))),t.push(...i.O.areas.map(e=>({title:e.name,path:e.area_id,subview:!0,hidden:e.hidden??!1,order:e.order??1/0,strategy:{type:"custom:jetson-strategy",options:{area:e}}}))),{views:t}}static async generateView(l){const d=i.O.getExposedNames("domain"),u=l.view.strategy?.options?.area??{},f=new o.A(i.O.entities).whereAreaId(u.area_id).toList(),g=[...u.extra_cards??[]],h={area_id:[u.area_id]},m=d.filter(n.dQ).map(async n=>{const l=(0,a.p)(n+"Card"),d=new o.A(f).whereDomain(n).where(e=>!("switch"===n&&e.entity_id.endsWith("_stateful_scene"))).toList();if(!d.length)return null;const u=new e.default({entity_id:d.map(e=>e.entity_id)},{...i.O.strategyOptions.domains._,...i.O.strategyOptions.domains[n]}).createCard();try{const e=(await s(560)(`./${l}`)).default;if("sensor"===n){let e=d.filter(e=>i.O.hassStates[e.entity_id]?.attributes.unit_of_measurement).map(e=>{const n={...e.device_id&&i.O.strategyOptions.card_options?.[e.device_id],...i.O.strategyOptions.card_options?.[e.entity_id],type:"custom:mini-graph-card",entities:[e.entity_id]};return new t.default(e,n).getCard()});return e.length?(e=(0,c.P)(e,i.O.strategyOptions.domains[n].stack_count??i.O.strategyOptions.domains._.stack_count),{type:"vertical-stack",cards:[u,...e]}):null}let a=d.map(t=>{const n={...t.device_id&&i.O.strategyOptions.card_options?.[t.device_id],...i.O.strategyOptions.card_options?.[t.entity_id]};return new e(t,n).getCard()});return a=(0,c.P)(a,i.O.strategyOptions.domains[n].stack_count??i.O.strategyOptions.domains._.stack_count),a.length?{type:"vertical-stack",cards:[u,...a]}:null}catch(e){return(0,r.OG)(r.nR,`Error creating card configurations for domain ${n}`,e),null}}),p=(await Promise.all(m)).filter(Boolean);if(g.push(...p),!i.O.strategyOptions.domains.default.hidden){const t=new o.A(f).not().where(e=>(0,n.dQ)(e.entity_id.split(".",1)[0])).toList();if(t.length)try{const n=(await Promise.resolve().then(s.bind(s,486))).default;let a=t.map(e=>new n(e,i.O.strategyOptions.card_options?.[e.entity_id]).getCard());const r=new e.default(h,{...i.O.strategyOptions.domains._,...i.O.strategyOptions.domains.default}).createCard();a.length&&(a=(0,c.P)(a,i.O.strategyOptions.domains.default.stack_count??i.O.strategyOptions.domains._.stack_count),g.push({type:"vertical-stack",cards:[r,...a]}))}catch(e){(0,r.OG)(r.nR,"Error creating card configurations for domain `miscellaneous`",e)}}return{cards:g}}}customElements.define("ll-strategy-dashboard-jetson-strategy",l),console.info("%c Jetson Strategy %c ".concat("v1.0.0"," "),"color: white; background: coral; font-weight: 700;","color: coral; background: white; font-weight: 700;")})()})();